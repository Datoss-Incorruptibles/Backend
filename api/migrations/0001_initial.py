# Generated by Django 3.1.4 on 2021-01-17 04:45

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Candidato',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jne_idcandidato', models.IntegerField()),
                ('jne_idhojavida', models.IntegerField()),
                ('jne_estado_lista', models.CharField(max_length=150)),
                ('jne_estado_expediente', models.CharField(max_length=150)),
                ('jne_estado_hojavida', models.CharField(max_length=150)),
                ('jne_posicion', models.IntegerField()),
                ('jne_organizacion_politica', models.CharField(max_length=150)),
                ('cargo_id', models.IntegerField()),
                ('proceso_id', models.IntegerField()),
                ('organizacion_politica_id', models.IntegerField()),
                ('documento_identidad', models.CharField(max_length=150)),
                ('apellido_paterno', models.CharField(max_length=150)),
                ('apellido_materno', models.CharField(max_length=150)),
                ('nombres', models.CharField(max_length=150)),
                ('fecha_nacimiento', models.DateField()),
                ('profesion', models.CharField(max_length=500, null=True)),
                ('nivel_estudio_id_max', models.IntegerField(null=True)),
                ('region', models.CharField(max_length=150, null=True)),
                ('distrito_electoral', models.CharField(max_length=150, null=True)),
                ('ubigeo_postula', models.CharField(max_length=150, null=True)),
                ('ruta_archivo', models.CharField(max_length=150, null=True)),
                ('fecha_registro', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('fecha_modificacion', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'candidato',
            },
        ),
        migrations.CreateModel(
            name='CandidatoEstudio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jne_idhojavida', models.IntegerField()),
                ('jne_idhvestudio', models.IntegerField()),
                ('jne_tabla', models.CharField(max_length=150)),
                ('nivel_estudio_id', models.CharField(max_length=250)),
                ('nivel_estudio', models.CharField(max_length=250)),
                ('nivel_estudio_estado', models.CharField(max_length=250)),
                ('grado', models.CharField(max_length=250)),
                ('institucion', models.CharField(max_length=250)),
                ('estudio', models.CharField(max_length=250)),
                ('institucion_id', models.IntegerField()),
                ('estudio_id', models.IntegerField()),
                ('comentario', models.TextField(null=True)),
                ('anio_bachiller', models.CharField(max_length=4)),
                ('anio_titulo', models.CharField(max_length=4)),
                ('fecha_registro', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('fecha_modificacion', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'candidato_estudio',
            },
        ),
        migrations.CreateModel(
            name='CandidatoExperiencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.IntegerField()),
                ('jne_idhojavida', models.IntegerField()),
                ('jne_idhvexpelaboral', models.IntegerField()),
                ('item_expelaboral', models.IntegerField()),
                ('centro_trabajo', models.CharField(max_length=250)),
                ('ocupacion_profesion', models.CharField(max_length=250)),
                ('anio_trabajo_desde', models.CharField(max_length=4)),
                ('anio_trabajo_hasta', models.CharField(max_length=4)),
                ('fecha_registro', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('fecha_modificacion', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'candidato_experiencia',
            },
        ),
        migrations.CreateModel(
            name='CandidatoJudicial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sentencia', models.CharField(max_length=150)),
                ('nro_expediente', models.CharField(max_length=50)),
                ('fallo', models.CharField(max_length=500)),
                ('cumple_fallo', models.CharField(max_length=150, null=True)),
                ('fecha_sentencia', models.DateField(null=True)),
                ('modalidad', models.CharField(max_length=150, null=True)),
                ('tipo_proceso', models.CharField(max_length=150)),
                ('estado_proceso', models.CharField(max_length=50)),
                ('jne_idhojavida', models.IntegerField()),
                ('jne_idhvsentencia', models.IntegerField()),
                ('fecha_registro', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('fecha_modificacion', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'candidato_judicial',
            },
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo', models.CharField(max_length=150)),
                ('estado', models.IntegerField()),
                ('fecha_registro', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('fecha_modificacion', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'cargo',
            },
        ),
        migrations.CreateModel(
            name='Indicador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
                ('titulo', models.CharField(max_length=150)),
                ('ubicacion', models.IntegerField()),
                ('alerta', models.IntegerField()),
                ('estado', models.IntegerField()),
                ('fecha_registro', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('fecha_modificacion', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'indicador',
            },
        ),
        migrations.CreateModel(
            name='IndicadorCategoria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
                ('alerta', models.IntegerField()),
                ('estado', models.IntegerField()),
                ('order', models.IntegerField()),
                ('fecha_registro', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('fecha_modificacion', models.DateTimeField(null=True)),
                ('indicador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.indicador')),
            ],
            options={
                'db_table': 'indicador_categoria',
            },
        ),
        migrations.CreateModel(
            name='OrganizacionPolitica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
                ('fundacion_fecha', models.DateField(null=True)),
                ('estado', models.IntegerField()),
                ('descripcion', models.TextField()),
                ('ruta_archivo', models.CharField(max_length=500)),
                ('jne_idorganizacionpolitica', models.IntegerField()),
                ('fecha_registro', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('url', models.CharField(max_length=150)),
                ('fecha_modificacion', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'organizacion_politica',
            },
        ),
        migrations.CreateModel(
            name='Proceso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
                ('estado', models.IntegerField()),
                ('jne_idproceso', models.IntegerField()),
                ('fecha_registro', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('fecha_modificacion', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'proceso',
            },
        ),
        migrations.CreateModel(
            name='Ubigeo',
            fields=[
                ('ubigeo', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('region', models.CharField(max_length=150)),
                ('distrito_electoral', models.CharField(max_length=150)),
                ('fecha_registro', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('fecha_modificacion', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'ubigeo',
            },
        ),
        migrations.CreateModel(
            name='IndicadorCategoriaOrganizacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField()),
                ('porcentaje', models.FloatField()),
                ('alerta', models.IntegerField()),
                ('estado', models.IntegerField()),
                ('fecha_registro', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('fecha_modificacion', models.DateTimeField(null=True)),
                ('indicador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.indicador')),
                ('indicador_categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.indicadorcategoria')),
                ('organizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicadorescategoriaorg', to='api.organizacionpolitica')),
            ],
            options={
                'db_table': 'indicador_categoria_organizacion',
                'ordering': ('indicador', 'indicador_categoria__order'),
            },
        ),
        migrations.CreateModel(
            name='IndicadorCategoriaCandidato',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField()),
                ('porcentaje', models.FloatField()),
                ('alerta', models.IntegerField()),
                ('estado', models.IntegerField()),
                ('fecha_registro', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('fecha_modificacion', models.DateTimeField(null=True)),
                ('candidato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicadores_categoria_candidato', to='api.candidato')),
                ('indicador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.indicador')),
                ('indicador_categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.indicadorcategoria')),
            ],
            options={
                'db_table': 'indicador_categoria_candidato',
                'ordering': ('indicador', 'indicador_categoria__order'),
            },
        ),
    ]
